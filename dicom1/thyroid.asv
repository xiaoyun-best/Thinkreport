%function [area, vol,weight] = thyroid(json_str, ReleaseVersion,handles,dcmname)
function [area, vol,weight] = thyroid(json_str)
% calc Volume of thyroid, by BQ and a
% filename : dicom file name
% iur : iodine update rate (2/4/24 hour ?)
% types : 'Hyperthyroidism' or 'remnant mass'

vol = 0;
area = 0;
weight = 0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%params
types = 'Hyperthyroidism';
called = chg_called_json(json_str);

ReleaseVersion = 1;
isDebug = ~ReleaseVersion;
dicom_url = called.url;
out_url = called.url2;
corner = called.coord;
id = called.id;
urlChar = called.url3;

iur = called.tiur;
[ret, retinfo] = qed_pacs_get_dicom(dicom_url);
dcmname = './temp.dcm';

% if isDebug
%     if(~exist('dcmname','var'))
%         [dcmname,pathname] = uigetfile( ...
%             { '*.dcm;*.IMA','dicom file(*.dcm,*.IMA)'; ...
%             '*.*',  'All Files (*.*)'}, ...
%             'Pick a file','MultiSelect','off', ...
%             'E:\\pictures\\patient');%'../../_thyroid/patient');
%         
%         if dcmname ==0, return; end;
%         dcmname = [pathname dcmname];
%     end;
% end
%[strPath,strName] = fileparts(dcmname);

% default 3hour iur
if(~exist('iur','var')) 
    disp('iodine uptake rate must be inputed');
    return;
end;

if ~exist('types','var')
    disp('types must be input: ''Hyperthyroidism'' or ''Remnant mass''');
    return;
end;

% debug or release version


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% open dicom file
dcminfo=dicominfo(dcmname);
dcmfile=double(dicomread(dcmname));
if length(size(dcmfile))>2
    disp('not support color image');
    return;
end;

% show image
if isDebug
    %     fig=figure(1);
    %     subplot (2,2,1,'Position');
    axes(handles.axes1);
    imshow(dcmfile,[]);title(dcminfo.PatientName.FamilyName);
end;

% get rect by mouse drawing
switch types
    case 'Remnant mass'
        if isDebug
            rect = uint16(getrect); %rect(xmin,ymin,width,height)
            rectangle('Position',rect,'EdgeColor','y');
        else
            rect  = resort(corner(1), corner(2), corner(3), corner(4));
        end
    case 'Hyperthyroidism'
        rect = getValidImgRect(dcmfile);
    otherwise
        disp('type not ''Hyperthyroidism'' or ''Remnant mass''');
        return;
end;



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% calc image params

t_begin = clock;

% remove background by rect
[rows,cols]=size(dcmfile);
mask=zeros(rows,cols);
mask(rect(2):(rect(2)+rect(4)), rect(1):(rect(1)+rect(3)))=1;

% blur image to layers
%dcmfileBlur = filter2(fspecial('average',5),dcmfile);
dcmfileBlur = medfilt2(dcmfile,[7,7]);
dcmfileBlur = blurImage(dcmfileBlur);

dcmfileBlur = mask .* dcmfileBlur;
a = dcmfileBlur(dcmfileBlur>0);
delta = std(a(:));
dcmfileBlur = dcmfileBlur.^(1+(5/delta));
%dcmfileBlur = exp(dcmfileBlur );

m2 = 255/max(dcmfileBlur(:));
dcmfileBlur = dcmfileBlur .* m2;

%subplot (2,2,2,'Position');
if isDebug
    axes(handles.axes2);
    imshow(dcmfileBlur,[]);title('Filter');
end

%segment and get masked image data
svmmask = svm(dcmfileBlur, mask, 1000, 0.1, false); %-- Run segmentation

%get background threshold
bgThreshold = getBackground(dcmfile,rect,svmmask);
dcmfileMasked = dcmfile - bgThreshold;
svmmask = (dcmfileMasked)>=0;
dcmfileMasked = dcmfileMasked .* svmmask .* mask;


area = getArea(dcminfo,dcmfileMasked);
Bq= sum(dcmfileMasked(:));
maxvalue = max(dcmfile(:));
[ret,retinfo, mix_img]  = qed_img_mask2contour( mask, dcmfile, maxvalue);

file_struct.PatientID = dcminfo.PatientID;
file_struct.PatientName = dcminfo.PatientName.FamilyName;
file_struct.StudyID = dcminfo.StudyID;
mix_img = uint8(mix_img);
file_struct.dcmname = './temp_out.dcm';
[ ret,retinfo ] =qed_pacs_create_dicom( mix_img,file_struct);
[ ret,retinfo ] = qed_pacs_upload_dicom( file_struct.dcmname,out_url );

tempjson = loadjson(retinfo);

if ret ==0
data = ['ndicomid=',tempjson.ID,'&id=', id, '&area=', area, '&vol=', vol, '&weight=', weight];
else
    disp('return = 1')
end
response = webwrite(urlChar, data);
disp(response);
%urlreadpost(urlChar,params);


% show area,Bq,Duration in titles=sprintf('a=%.1f %.1fk %.0fs',area/100,Bq/1000,dcminfo.ActualFrameDuration/1000);
if isDebug
    axes(handles.axes3);
    %clipedImage = subplot (2,2,3,'Position');
    imshow(dcmfileMasked,[]);title(s);
end
%imwrite(uint8(dcmfileMasked),'masked.png','png');

%calc volume
vol = getVolumeByPoly1(dcminfo,dcmfileMasked,iur);

%weight
weight = vol * 1.001; % density = 1.001

t_end = clock;

%output infor
result = sprintf('[%s]\t [vol=%.2fml]',dcminfo.PatientName.FamilyName,vol);
fprintf('%s\n',result);

% - histogram
histogram = imgHistogram(dcmfile.*mask);
if isDebug
%    subplot(2,2,4);
    axes(handles.axes4);
    bar(histogram,0.8);
    title(result);
end

%write figure1 to image
%imgsc = [dcmname '_fg.jpg'];
%print(fig,imgsc,'-djpeg');


fprintf('duration=%.2fs\n------ finished ------\n ',etime(t_end,t_begin));

  


   




